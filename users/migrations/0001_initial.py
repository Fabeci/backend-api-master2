# Generated by Django 5.1.2 on 2024-11-17 17:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nom', models.CharField(max_length=30)),
                ('prenom', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_super_admin', models.BooleanField(default=False)),
                ('is_responsable_academique', models.BooleanField(default=False)),
                ('is_formateur', models.BooleanField(default=False)),
                ('is_apprenant', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('pays_residence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='locations.pays')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='SuperAdmin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administrateurs', to='academics.institution')),
            ],
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Formateur',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('groupes', models.ManyToManyField(related_name='formateurs', to='academics.groupe')),
                ('institutions', models.ManyToManyField(related_name='formateurs_users', to='academics.institution')),
                ('specialites', models.ManyToManyField(related_name='formateurs', to='academics.specialite')),
            ],
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Apprenant',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classe_apprenant', to='academics.classe')),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupe_apprenant', to='academics.groupe')),
                ('tuteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='users.parent')),
            ],
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='ResponsableAcademique',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsables_academiques', to='academics.institution')),
            ],
            bases=('users.user',),
        ),
    ]
